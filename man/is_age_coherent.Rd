% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilsAge.R
\name{is_age_coherent}
\alias{is_age_coherent}
\title{check for coherence within Age and between Age and AgeInt}
\usage{
is_age_coherent(Age, AgeInt, OAG = TRUE)
}
\arguments{
\item{Age}{integer vector of single ages (lower bound)}

\item{AgeInt}{integer vector. Age interval widths}

\item{OAG}{logical (default \code{TRUE}). Is the final age group open?}
}
\value{
logical. \code{TRUE} if the arguments are considered consistent.
}
\description{
A few checks are carried out to test if \code{Age} is internally consistent, that \code{OAG} is consistent with \code{AgeInt}, and that \code{Age} and \code{AgeInt} are consistent with one another. For \code{Age} to be internally consistent, we cannot have redundant values, and values must be sequential.
}
\details{
If \code{OAG} is \code{TRUE} then \code{AgeInt} must be coded as \code{NA}. If \code{Age} is not sorted then we sort both \code{Age} and \code{AgeInt}, assuming that they are in matched order. This isn't incoherence in itself, but a message is returned to the console.
}
\examples{
Age    <- 0:99
AgeInt <- rep(1, 100)
# closed, sequential, non-redundant ages, any easy yes:
is_age_coherent(Age = Age, AgeInt = AgeInt, OAG = FALSE)     # TRUE

# incorrectly coded OAG
is_age_coherent(Age = Age, AgeInt = AgeInt, OAG = TRUE)      # FALSE

# correctly coded OAG
AgeInt[100] <- NA
is_age_coherent(Age = Age, AgeInt = AgeInt, OAG = TRUE)      # TRUE

# correct unordered, but this isn't incoherence per se.
# watch out though!
aaoo <- order(sample(Age, 100, replace = FALSE))
is_age_coherent(Age[aaoo], AgeInt = AgeInt[aaoo], OAG = TRUE) # TRUE

# check redundancy
AgeRed    <- c(0:100,70)
AgeInt    <- c(rep(1, 100), NA, NA)
ao        <- order(AgeRed)
AgeRed    <- AgeRed[ao]
AgeIntRed <- AgeInt[ao]
is_age_coherent(AgeRed, AgeInt, TRUE)  # FALSE
}
