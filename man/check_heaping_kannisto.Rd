% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_heaping.R
\name{check_heaping_kannisto}
\alias{check_heaping_kannisto}
\title{Kannisto's age heaping index}
\usage{
check_heaping_kannisto(Value, Age, Agei = 90, pow = "exp")
}
\arguments{
\item{Value}{numeric. A vector of demographic counts or rates by single age.}

\item{Age}{integer. A vector of ages corresponding to the lower integer bound of the counts.}

\item{Agei}{integer. The age on which the index is centered.}

\item{pow}{either \code{"exp"} (default) or a power such as 2. See details}
}
\value{
The value of the index.
}
\description{
This age heaping index is used for particular old ages, such as 90, 95, 100, 105, and so forth.
}
\details{
The index looks down two ages and up two ages, so the data must accommodate that range. The denominator is a mean of the counts in the surrounding 5 single ages. The kind of mean can be controlled with the \code{pow} argument. By default, this takes the antilog of the arithmetic mean of the natural log of the five denominator counts. That will fail if one of the counts is equal to 0. In such cases, another power, such as 2 or 10 or 100 may be used, which is more robust to 0s. The higher the power, the closer the result will resemble the default output. If \code{pow=="exp"} but a 0 is detected among the denominator ages, then \code{pow} is assigned a value of 1000. \code{pow=1} would imply an arithmetic mean in the denominator.
}
\examples{
Age <- 0:99
check_heaping_kannisto(pop1m_pasex, Age, 90)
check_heaping_kannisto(pop1m_pasex, Age, 95)
check_heaping_kannisto(pop1m_pasex, Age, 95, pow = 2) # geometric mean in denom
check_heaping_kannisto(pop1m_pasex, Age, 95, pow = 1000) # similar, but robust to 0s
check_heaping_kannisto(pop1m_pasex, Age, 95, pow = 1) # arithmetic mean in denom
pop1m_pasex[Age==95] / mean(pop1m_pasex[Age >= 93 & Age <= 97])
}
\references{
\insertRef{kannisto1999assessing}{DemoTools}
}
